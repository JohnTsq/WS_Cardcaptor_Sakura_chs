.headersize 0x40000-0x140000
.org 0x40000
initialize:
    .byte 0xFA                          ; CLI
    .byte 0x30, 0xC0                    ; XOR AL, AL
    .byte 0xE6, 0xB2                    ; OUT 0xB2, AL
    .byte 0xFC                          ; CLD
    .byte 0x31, 0xC0                    ; XOR AX, AX
    .byte 0x8E, 0xD8                    ; MOV DS, AX
    .byte 0x8E, 0xC0                    ; MOV ES, AX
    .byte 0x89, 0xC5                    ; MOV BP, AX
    .byte 0x8E, 0xD0                    ; MOV SS, AX
    .byte 0xBC, 0xFE, 0x0F              ; MOV SP, 0x0FFE
    .byte 0xBF, 0x00, 0x00              ; MOV DI, 0x0000
    .byte 0xB9, 0x00, 0x20              ; MOV CX, 0x2000
    .byte 0xF3, 0xAB                    ; REPZ STOSW
    .byte 0xB0, 0x00                    ; MOV AL, 0x00
    .byte 0xE6, 0x60                    ; OUT 0x60, AL
    .byte 0xB0, 0x01                    ; MOV AL, 0x01
    .byte 0xE6, 0x00                    ; OUT 0x00, AL
    .byte 0xB0, 0x01                    ; MOV AL, 0x01
    .byte 0xE6, 0x14                    ; OUT 0x14, AL
    .byte 0xB8, 0xFF, 0xFF              ; MOV AX, 0xFFFF
    .byte 0xE7, 0x1C                    ; OUT 0x1C, AX
    .byte 0xB8, 0x10, 0x32              ; MOV AX, 0x3210
    .byte 0xE7, 0x20                    ; OUT 0x20, AX
    .byte 0xB8, 0x00, 0x40              ; MOV AX, 0x4000
    .byte 0x8E, 0xD8                    ; MOV DS, AX
    .byte 0xBE, 0x12, 0x01              ; MOV SI, 0x0112
    .byte 0xBF, 0x00, 0x20              ; MOV DI, 0x2000
    .byte 0xB9, 0xC0, 0x0F              ; MOV CX, 0x0FC0
    .byte 0xF3, 0xA5                    ; REPZ MOVSW
    .byte 0xB8, 0x02, 0x00              ; MOV AX, 0x0002
    .byte 0xE7, 0x07                    ; OUT 0x07, AX
    .byte 0xB9, 0xF8, 0x01              ; MOV CX, 0x01F8
    .byte 0x89, 0xC8                    ; MOV AX, CX
    .byte 0x48                          ; DEC AX
    .byte 0x89, 0xC6                    ; MOV SI, AX
    .byte 0x31, 0xD2                    ; XOR DX, DX
    .byte 0xBB, 0x1C, 0x00              ; MOV BX, 0x001C
    .byte 0xF7, 0xF3                    ; DIV AX, BX
    .byte 0xC1, 0xE0, 0x05              ; SHL AX, 0x05
    .byte 0x01, 0xD0                    ; ADD AX, DX
    .byte 0xD1, 0xE0                    ; SHL AX
    .byte 0x89, 0xC7                    ; MOV DI, AX
    .byte 0x26, 0x89, 0xB5, 0x00, 0x10  ; MOV ES:[DI+0x1000], SI
    .byte 0xE2, 0xE4                    ; LOOP -0x1C
    .byte 0x31, 0xC0                    ; XOR AX, AX
    .byte 0x8E, 0xD8                    ; MOV DS, AX
    .byte 0xB0, 0x20                    ; MOV AL, 0x20
    .byte 0xE6, 0xB0                    ; OUT 0xB0, AL
    .byte 0x83, 0xC0, 0x06              ; ADD AX, 0x0006
    .byte 0xC1, 0xE0, 0x02              ; SHL AX, 0x02
    .byte 0x89, 0xC7                    ; MOV DI, AX
    .byte 0xC7, 0x05, 0xE3, 0x00        ; MOV DS:[DI], 0x00E3
    .byte 0xC7, 0x45, 0x02, 0x00, 0x40  ; MOV DS:[DI+0x02], 0x4000
    .byte 0xB0, 0xFF                    ; MOV AL, 0xFF
    .byte 0xE6, 0xB6                    ; OUT 0xB6, AL
    .byte 0x31, 0xC0                    ; XOR AX, AX
    .byte 0xE7, 0xA4                    ; OUT 0xA4, AX
    .byte 0xE6, 0xA2                    ; OUT 0xA2, AL
    .byte 0xB0, 0x40                    ; MOV AL, 0x40
    .byte 0xE6, 0xB2                    ; OUT 0xB2, AL
    .byte 0xFB                          ; STI
    .byte 0xB8, 0x00, 0x40              ; MOV AX, 0x4000
    .byte 0x8E, 0xC0                    ; MOV ES, AX
    .byte 0xF4                          ; HLT
    .byte 0x80, 0x3E, 0x00, 0x01, 0x01  ; CMP DS:[0x0100], 0x01
    .byte 0x75, 0xF8                    ; JNZ -0x08
    .byte 0xC6, 0x06, 0x00, 0x01, 0x00  ; MOV DS:[0x0100], 0x00
    .byte 0xFE, 0x06, 0x01, 0x01        ; INC DS:[0x0101]
    .byte 0x80, 0x3E, 0x01, 0x01, 0x1F  ; CMP DS:[0x0101], 0x1F
    .byte 0x72, 0x09                    ; JB +0x09
    .byte 0x80, 0x3E, 0x01, 0x01, 0xE1  ; CMP DS:[0x0101], 0xE1
    .byte 0x77, 0x1D                    ; JA +0x1D
    .byte 0xEB, 0xDF                    ; JMP -0x21
    .byte 0x80, 0x3E, 0x01, 0x01, 0x00  ; CMP DS:[0x0101], 0x00
    .byte 0x74, 0x24                    ; JZ +0x24
    .byte 0xBB, 0x1E, 0x00              ; MOV BX, 0x001E
    .byte 0x2A, 0x1E, 0x01, 0x01        ; SUB BL, DS:[0x0101]
    .byte 0x81, 0xE3, 0xFE, 0x00        ; AND BX, 0x00FE
    .byte 0x26, 0x8B, 0x87, 0xF2, 0x00  ; MOV AX, ES:[BX+0x00F2]
    .byte 0xE7, 0x1C                    ; OUT 0x1C, AX
    .byte 0xEB, 0xC4                    ; JMP -0x3C
    .byte 0x8A, 0x1E, 0x01, 0x01        ; MOV BL, DS:[0x0101]
    .byte 0x83, 0xE3, 0x1E              ; AND BX, 0x001E
    .byte 0x26, 0x8B, 0x87, 0xF2, 0x00  ; MOV AX, ES:[BX+0x00F2]
    .byte 0xE7, 0x1C                    ; OUT 0x1C, AX
    .byte 0xEB, 0xB4                    ; JMP -0x4C
    .byte 0xEA, 0x1A, 0x00, 0x00, 0xD0  ; JMP 0xD000:0x001A

    .byte 0x50                          ; PUSH AX
    .byte 0xC6, 0x06, 0x00, 0x01, 0x01  ; MOV DS:[0x0100], 0x01
    .byte 0xE4, 0xB6                    ; IN AL, 0xB6
    .byte 0x0C, 0x40                    ; OR AL, 0x40
    .byte 0xE6, 0xB6                    ; OUT 0xB6, AL
    .byte 0x58                          ; POP AX
    .byte 0xCF                          ; IRET

.align 2, 0xFF
	.d16 0x05AF, 0x16AF, 0x26BF, 0x37BF
	.d16 0x48BF, 0x58CF, 0x69CF, 0x7ACF
	.d16 0x8ADF, 0x9BDF, 0xACDF, 0xBCEF
	.d16 0xCDEF, 0xDEEF, 0xEEFF, 0xFFFF

.incbin ".\graphic\splash\Splash.2bpp"

.org 0xFFFF0
    ; EA 4000:0000
    .byte 0xEA
    .d16 0, 0x4000